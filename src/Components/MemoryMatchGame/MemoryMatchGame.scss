// MemoryMatchGame.scss

@use "../../styles/_colours.module.scss";
@use "../../styles/_media-queries.scss" as *;
@use "../../styles/_mixins.module.scss";
@use "../../styles/_variables.module.scss";
@use "sass:math";

html.debug {
	.memory-map-container {
		span {
			border: 1px solid rgba(255, 0, 0, 0.2);
		}
	}
}
$none: rgba(#fff, 0);
$blue: #302e9b;
$border-radius: 10px;
$transition-time: variables.$memory-card-transition-time;
.memory-match-game {
	display: flex;
	flex-direction: column;
	align-items: center;
}

.memory-map-container {
	min-width: 670px;
	display: grid;
	grid-template-columns: 1fr 0.1fr;
	grid-template-rows: auto 1fr;
	max-width: 100%;
	min-height: 500px;
	align-items: start;
	> h2 {
		text-align: center;
		margin: 0;
		color: white;
		font-weight: bold;
	}
	.cards {
		padding: 0 0 2rem 1rem;
		max-width: 1000px;
		margin: 0 auto; // 1rem;
		perspective: 2000px;

		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: repeat(auto);
		gap: 0.5rem; /* spacing between items */
		width: fit-content;
	}

	.matches-container {
		display: flex;
		align-items: flex-end;
	}

	.matches {
		min-width: 300px;
		transform-origin: top;
		grid-row-gap: 0.5rem;

		display: grid;
		grid-template-columns: 1fr 1fr;
		width: fit-content;
		margin: auto;
		> div {
			max-height: 60px;
			display: flex;
			align-items: flex-start;
			justify-content: flex-end;
			&:nth-child(even) {
				justify-content: flex-start;
			}
		}
		.card {
			cursor: not-allowed;
			transform: rotateX(180deg);
			&.flipped {
				transition: opacity $transition-time;
			}
			&.text {
				transform: rotateX(180deg) rotateZ(10deg);
				animation: revealText linear $transition-time;
			}
			&.image {
				transform: rotateX(180deg) rotateZ(-10deg);
				animation: revealImage linear $transition-time;
			}
			.audio-container {
				display: none;
			}
		}
	}

	@keyframes revealText {
		0% {
			transform: rotateX(0deg) rotateZ(-5deg);
		}
		100% {
			transform: rotateX(180deg) rotateZ(10deg);
		}
	}

	@keyframes revealImage {
		0% {
			transform: rotateX(0deg) rotateZ(5deg);
		}
		100% {
			transform: rotateX(180deg) rotateZ(-10deg);
		}
	}

	@keyframes shadow {
		0% {
			background-color: rgba(255, 0, 0, 0);
		}
		25% {
			background-color: rgba(255, 0, 0, 0.3);
		}
		50% {
			background-color: rgba(255, 0, 0, 0.4);
		}

		75% {
			background-color: rgba(255, 0, 0, 0.3);
		}
		100% {
			background-color: rgba(255, 0, 0, 0);
		}
	}
}

@include respond-above(m) {
	.memory-map-container {
		.matches {
			min-width: 280px;
		}
	}
}

@include respond-above(l) {
	.memory-map-container {
		&.num16cards {
			min-height: 600px;
		}
		&.num20cards {
			min-height: 760px;
		}
		.cards {
			grid-template-columns: repeat(4, 1fr);
			grid-row-gap: 0.5rem;
		}
		.matches {
			min-width: 250px;
			padding: 0 0.6rem;
		}
	}
}

@include respond-above(xl) {
	.memory-map-container {
		gap: 0.5rem;
		.cards {
			grid-template-columns: repeat(4, 1fr);
			grid-row-gap: 0.5rem;
		}
		.matches {
			padding: 1.25rem 1rem; // To compensate for the 0.8 scale see below
			gap: 0.5rem;
		}
	}
}

@include respond-above(xxl) {
	.memory-map-container {
		min-height: 600px;
		&.num16cards {
			min-height: 730px;
		}
		&.num20cards {
			min-height: 860px;
		}
		.matches {
			min-width: 280px;
			> div {
				max-height: 70px;
			}
		}
	}
}
