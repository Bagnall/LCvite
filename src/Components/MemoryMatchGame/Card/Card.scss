// Card.scss

// @use "../../../styles/_mixins.module.scss";
@use "../../../styles/_mixins.module.scss";
@use "../../../styles/_variables.module.scss";
$border-radius: 10px;
$transition-time: variables.$memory-card-transition-time;
$units: 4px;
$none: rgba(#fff, 0);
$blue: #302e9b;

.card {
	background-color: white;
	border-radius: $border-radius;
	border: 1px solid #ccc;
	box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);
	cursor: pointer;
	height: 100px;
	padding: 10px;
	position: relative;
	text-align: center;
	width: 160px;
	transform: rotateX(0deg);
	transform-style: preserve-3d;
	transition:
		transform $transition-time,
		box-shadow $transition-time;
	.card-contents-container {
		&:before {
			@include mixins.standard-pseudo();
			// animation: shadow $transition-time linear;
			backface-visibility: hidden;
			// background-color: rgba(255, 0, 0, 0.5);
			border-radius: $border-radius;
		}
		top: 0;
		left: 0;
		border-radius: $border-radius;
		position: absolute;
		backface-visibility: hidden;
		transform: rotateX(180deg);
		align-items: center;
		justify-content: center;
		width: 100%;
		height: 100%;
		display: flex;
		.card-image-container {
			max-height: 100px;
			background-size: contain;
			background-repeat: no-repeat;
			background-position: center center;
			width: calc(100% - 20px);
			height: calc(100% - 20px);
			display: inline-block;
		}
	}
	.card-back {
		&:after {
			@include mixins.standard-pseudo();
			border-radius: $border-radius;
			// animation: shadow $transition-time linear;
			// background-color: rgba(0, 255, 0, 0.2);
		}
		border-radius: $border-radius;
		position: absolute;
		backface-visibility: hidden;
		// background-color: red; //rgba(255, 0, 0, 0.4);
		top: 0;
		left: 0;
		height: 100%;
		z-index: 1;
		align-items: center;
		justify-content: center;
		width: 100%;
		display: flex;

		// transition: background-color $transition-time;

		// box-shadow:
		background-image: repeating-linear-gradient(45deg, $none, $none Calc(1 * $units), $blue Calc(1 * $units), $blue Calc(2 * $units)),
			repeating-linear-gradient(-45deg, $none, $none Calc(1 * $units), $blue Calc(1 * $units), $blue Calc(2 * $units));
		span {
			display: none;
		}
	}
	&.been-flipped {
		.card-back {
			&:before {
				@include mixins.standard-pseudo();
				animation: shadowHalf $transition-time/2 ease-in-out $transition-time/4;
				border-radius: $border-radius;
				// background-color: green;
			}
		}
		.card-contents-container {
			&:after {
				@include mixins.standard-pseudo();
				animation: shadow $transition-time ease-in-out;
				border-radius: $border-radius;
				// background-color: red;
			}
		}
	}

	&.flipped {
		.card-back {
			&:before {
				@include mixins.standard-pseudo();
				animation: shadow $transition-time/2 ease-in-out;
				border-radius: $border-radius;
				// background-color: green;
			}
		}
		.card-contents-container {
			&:after {
				@include mixins.standard-pseudo();
				animation: shadowHalf $transition-time/2 ease-in-out $transition-time/4;
				border-radius: $border-radius;
				// background-color: red;
			}
		}
	}
}
@keyframes shadow {
	0% {
		background-color: rgba(255, 0, 0, 0);
	}
	45% {
		background-color: rgba(0, 0, 0, 0.4); //red; //rgba(255, 0, 0, 0.3);
	}
	50% {
		background-color: rgba(0, 0, 0, 0.4); //red; //rgba(255, 0, 0, 0.4);
	}

	55% {
		background-color: rgba(0, 0, 0, 0.4); //red; //rgba(255, 0, 0, 0.3);
	}
	100% {
		background-color: rgba(255, 0, 0, 0);
	}
}
@keyframes shadowHalf {
	0% {
		background-color: rgba(0, 0, 0, 0.4); //blue; //rgba(255, 0, 0, 0.4);
	}

	15% {
		background-color: rgba(0, 0, 0, 0.4); //blue; //rgba(255, 0, 0, 0.3);
	}
	100% {
		background-color: rgba(255, 0, 0, 0);
	}
}
